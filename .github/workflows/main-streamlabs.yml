name: 'CI Multiplatform Build'

on:
  push:
    paths-ignore:
      - '**.md'
    branches: [ "xwobs" ]
    tags:
      - '*'
  pull_request:
    paths-ignore:
      - '**.md'
    branches: [ "xwobs" ]

env:
  InstallPath: "packed_build"
  BUILD_DIRECTORY: "build"
  RELEASE_BUCKET: "obsstudios3.streamlabs.com"
  PACKAGE_NAME: "libobs"

jobs:
  win64:
    name: 'Windows 64-bit'
    runs-on: windows-latest
    strategy:
      matrix:
        ReleaseName: [release]
        include:
        - ReleaseName: release
          BuildConfig: Release
          CefBuildConfig: Release
    env:
      OS_TAG: "windows64"
      CEF_VERSION: 5060
      WIN_DEPS_VERSION: windows-deps-2022-08-02-x64-sl.1
      GRPC_VERSION: v1.47.0
      CMakeGenerator: Visual Studio 17 2022
      VLC_VERSION: vlc_3.0.0-git
    steps:
      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Configure / Build
        run: ./slobs_CI/win-build.cmd
        shell: cmd
        env:
          ReleaseName: ${{matrix.ReleaseName}}
          BuildConfig: ${{matrix.BuildConfig}}
          CefBuildConfig: ${{matrix.CefBuildConfig}}
      - name: Tar artifact for deployment
        if: startsWith(github.ref, 'refs/tags/')
        run: 7z a -r ${{env.TARGET_ARTIFACT}}.7z ${{env.InstallPath}}
        env:
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{env.OS_TAG}}-${{matrix.ReleaseName}}-${{ steps.get_version.outputs.VERSION }}
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: xwobs.7z
          path: ${{env.TARGET_ARTIFACT}}.7z
        env:
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{env.OS_TAG}}-${{matrix.ReleaseName}}-${{ steps.get_version.outputs.VERSION }}
